blueprint:
  name: Adjust Temperature
  description: Adjusts the thermostat temperature based on time, presence, and modes.
  domain: automation
  input:
    family_group:
      name: Family Group
      description: Group entity representing the family's presence
      selector:
        entity:
          domain: group
    home_temp:
      name: Home Temperature
      description: Input number for the desired home temperature
      selector:
        entity:
          domain: input_number
    thermostat:
      name: Thermostat
      description: The thermostat entity to control
      selector:
        entity:
          domain: climate
    summer_modifier:
      name: Summer Modifier
      description: Temperature adjustment in summer
      default: 1.0
      selector:
        number:
          min: 0.0
          max: 10.0
          step: 0.5
    vacation_mode:
      name: Vacation Mode
      description: Input boolean for vacation mode
      selector:
        entity:
          domain: input_boolean
    vacation_modifier:
      name: Vacation Modifier
      description: Additional temperature adjustment during vacation mode
      default: 2.0
      selector:
        number:
          min: 0.0
          max: 10.0
          step: 0.5
    away_modifier:
      name: Away Modifier
      description: Temperature adjustment when family is away or outside the time range
      default: 1.0
      selector:
        number:
          min: 0.0
          max: 10.0
          step: 0.5
    time_range_start:
      name: Time Range Start
      description: Start of the active time range (HH:MM:SS)
      default: '09:00:00'
      selector:
        time:
    time_range_end:
      name: Time Range End
      description: End of the active time range (HH:MM:SS)
      default: '23:00:00'
      selector:
        time:

variables:
  base_temp: "{{ states(!input home_temp) | float }}"
  is_family_home: "{{ states(!input family_group) == 'home' }}"
  is_vacation_on: "{{ is_state(!input vacation_mode, 'on') }}"
  is_thermostat_off: "{{ is_state(!input thermostat, 'off') }}"
  in_time_range: >
    {% set time_start = strptime(!input time_range_start, '%H:%M:%S').time() %}
    {% set time_end = strptime(!input time_range_end, '%H:%M:%S').time() %}
    {{ now().time() >= time_start and now().time() <= time_end }}

trigger:
  - platform: state
    entity_id: !input family_group
  - platform: state
    entity_id: !input home_temp
  - platform: state
    entity_id: !input thermostat
  - platform: state
    entity_id: !input vacation_mode
  - platform: time
    at: !input time_range_start
  - platform: time
    at: !input time_range_end

action:
  - service: climate.set_temperature
    data:
      temperature: >
        {% set adjustment = 0 %}
        
        {% if not (in_time_range and is_family_home) %}
          {% set adjustment = adjustment + float(away_modifier) %}
        {% else %}
          {% if is_vacation_on %}
            {% set adjustment = adjustment + float(vacation_modifier) %}
          {% endif %}
        {% endif %}
        
        {% if is_thermostat_off %}
          {% set adjustment = adjustment + float(summer_modifier) %}
        {% else %}
          {% set adjustment = adjustment * -1 %}
        {% endif %}
        
        {{ (base_temp + adjustment) | round(1) }}
    target:
      entity_id: !input thermostat
